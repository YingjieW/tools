<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.tools.*" />

	<!-- 拦截器类不需要扫描，注释掉 -->
	<!-- <context:component-scan base-package="com.tools.interceptor.*" /> -->

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>

	<!-- servlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404; -->
	<!-- 加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容。 -->
	<!-- <mvc:default-servlet-handler/> -->

	<!-- 对静态资源文件的访问 -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:annotation-driven />

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个可用的url地址 -->
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 全路径拦截 -->
			<mvc:mapping path="/**" />
			<!-- 不需要拦截的路径 -->
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/cs/**"/>
			<bean class="com.tools.interceptor.ConsumeTimeInterceptor" />
		</mvc:interceptor>
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/image/*" />-->
			<!--<bean class="com.tools.interceptor.RequestInterceptor" />-->
		<!--</mvc:interceptor>-->
	</mvc:interceptors>

	<bean id="rmiMockInterceptor" class="com.tools.aop.RmiMockInterceptor"></bean>
	<aop:config>
		<aop:advisor advice-ref="rmiMockInterceptor"
					 pointcut="execution(* com.tools.ztest.facade.impl..*(..))" />
	</aop:config>
</beans>
